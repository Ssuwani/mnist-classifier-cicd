name: CI

on:
  push:
    branches:
      - main
env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: cluster-1
  GKE_ZONE: us-central1-a
  IMAGE: mnist_train_linear

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # Setup gcloud CLI
      - uses: google-github-actions/setup-gcloud@v0.2.0
        with:
          service_account_key: ${{ secrets.GKE_SA_KEY }}
          project_id: ${{ secrets.GKE_PROJECT }}
          export_default_credentials: true

      # Configure Docker to use the gcloud command-line tool as a credential
      # helper for authentication
      - run: |-
          gcloud --quiet auth configure-docker

      # Get the GKE credentials so we can deploy to the cluster
      - uses: google-github-actions/get-gke-credentials@v0.2.1
        with:
          cluster_name: ${{ env.GKE_CLUSTER }}
          location: ${{ env.GKE_ZONE }}
          credentials: ${{ secrets.GKE_SA_KEY }}

      - name: Tag with GITHUB SHA
        run: echo "TAG=`echo ${GITHUB_SHA} | cut -c1-8`" >> $GITHUB_ENV

      # Build the Docker image
      - name: Build
        run: docker build -t gcr.io/$PROJECT_ID/mnist_train_linear:$TAG train_linear
        # run: |-
        #   docker build \
        #     --tag "gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA" \
        #     --build-arg GITHUB_SHA="$GITHUB_SHA" \
        #     --build-arg GITHUB_REF="$GITHUB_REF" \
        #     train_linear/

      # Push the Docker image to Google Container Registry
      - name: Publish
        run: |-
          docker push gcr.io/$PROJECT_ID/mnist_train_linear:$TAG

      - name: Edit deployment yaml with SHA tag
        uses: mikefarah/yq@master
        with:
          cmd: |-
            JOBNAME="mnist-train-linear-job-$TAG" yq e -i '.metadata.name = env(JOBNAME)' train_linear_job.yaml
            IMAGE="gcr.io/$PROJECT_ID/mnist_train_linear:$TAG" yq e -i '.spec.template.spec.containers[0].image = env(IMAGE)' train_linear_job.yaml
            DIR="gs://suwan/mnist_$TAG" yq e -i '.spec.template.spec.containers[0].args[5] = env(DIR)' train_linear_job.yaml

      - name: Run Training Job
        run: |-
          kubectl apply -n mnist -f train_linear_job.yaml

#     # Set up kustomize
#     - name: Set up Kustomize
#       run: |-
#         curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
#         chmod u+x ./kustomize

#     # Deploy the Docker image to the GKE cluster
#     - name: Deploy
#       run: |-
#         ./kustomize edit set image gcr.io/PROJECT_ID/IMAGE:TAG=gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA
#         ./kustomize build . | kubectl apply -f -
#         kubectl rollout status deployment/$DEPLOYMENT_NAME
#         kubectl get services -o wide
