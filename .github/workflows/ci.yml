name: CI

on:
  push:
    branches:
      - main
env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: cluster-1
  GKE_ZONE: us-central1-a
  TRAIN_IMAGE: mnist_train

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # Setup gcloud CLI
      - uses: google-github-actions/setup-gcloud@v0.2.0
        with:
          service_account_key: ${{ secrets.GKE_SA_KEY }}
          project_id: ${{ secrets.GKE_PROJECT }}
          export_default_credentials: true

      # Configure Docker to use the gcloud command-line tool as a credential
      # helper for authentication
      - run: |-
          gcloud --quiet auth configure-docker

      # Get the GKE credentials so we can deploy to the cluster
      - uses: google-github-actions/get-gke-credentials@v0.2.1
        with:
          cluster_name: ${{ env.GKE_CLUSTER }}
          location: ${{ env.GKE_ZONE }}
          credentials: ${{ secrets.GKE_SA_KEY }}

      - name: Tag with GITHUB SHA
        run: echo "TAG=`echo ${GITHUB_SHA} | cut -c1-8`" >> $GITHUB_ENV

      # Build the Docker image
      - name: Build
        run: docker build -t gcr.io/$PROJECT_ID/$TRAIN_IMAGE:$TAG \
          --build-arg ACCESS_TOKEN=${{ secrets.ACCESS_TOKEN}} \
          train

      # Push the Docker image to Google Container Registry
      - name: Publish
        run: |-
          docker push gcr.io/$PROJECT_ID/$TRAIN_IMAGE:$TAG

      - name: Edit deployment yaml with SHA tag
        uses: mikefarah/yq@master
        with:
          cmd: |-
            JOBNAME="mnist-train-job-$TAG" yq e -i '.metadata.name = env(JOBNAME)' train/train_job.yaml
            IMAGE="gcr.io/$PROJECT_ID/$TRAIN_IMAGE:$TAG" yq e -i '.spec.template.spec.containers[0].image = env(IMAGE)' train/train_job.yaml
            DIR="gs://suwan/mnist_$TAG" yq e -i '.spec.template.spec.containers[0].args[5] = env(DIR)' train/train_job.yaml

      - name: Run Training Job
        run: |-
          kubectl apply -f train/train_job.yaml
